{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","handleFilter","onChange","Persons","newFilter","persons","deleteContact","personsFiltered","filter","person","name","toLowerCase","includes","displayPersons","length","map","key","number","id","onClick","PersonForm","addEntry","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","text","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","duplicateContact","find","p","event","target","preventDefault","msg","window","confirm","updatedPerson","setTimeout","catch","error","returnedPerson","concat","alert","e","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"mNAOeA,EALA,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAF,OACX,8DAAmC,2BAAOC,SAAUD,MCwBzCE,EAxBC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAE5BC,EAAkBF,EAAQG,QAAO,SAAAC,GACnC,OAAOA,EAAOC,KAAKC,cAAcC,SAASR,EAAUO,kBAKlDE,GAFqC,IAArBT,EAAUU,OAAeT,EAAUE,GAEpBQ,KAAI,SAAAN,GAAM,OAC3C,yBAAKO,IAAKP,EAAOC,MACXD,EAAOC,KADb,IACoBD,EAAOQ,OAEvB,4BAAQP,KAAOD,EAAOC,KACdQ,GAAKT,EAAOS,GACZC,QAAUb,GAFlB,eAOR,OACI,6BAAMO,ICDCO,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,UAAWC,EAAnD,EAAmDA,mBAAnD,OAEjB,0BAAMC,SAAUL,GACV,sCACQ,2BAAQM,MAAOL,EACrBpB,SAAUqB,KAGZ,wCACU,2BAAQI,MAAOH,EACvBtB,SAAUuB,KAGZ,6BACE,4BAAQG,KAAK,UAAb,U,gBCfJC,EAAU,eAoBD,EAlBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB5B,EAbA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW5B,EARA,SAAChB,EAAIiB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBX,GAAMiB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAM5B,EAHM,SAAAhB,GAAE,OAAIY,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BX,KCJvCqB,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAA6B,UAAjBD,EAAQZ,KAAmB,QAAU,gBACnDY,EAAQE,OC4JAC,EA9JH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRvC,EADQ,KACCwC,EADD,OAEgBD,mBAAS,IAFzB,mBAERtB,EAFQ,KAECwB,EAFD,OAGoBF,mBAAS,IAH7B,mBAGRpB,EAHQ,KAGGuB,EAHH,OAIoBH,mBAAS,IAJ7B,mBAIRxC,EAJQ,KAIG4C,EAJH,OAKuCJ,mBAAS,MALhD,mBAKRK,EALQ,KAKaC,EALb,KAOlBC,qBAAU,WACNC,IAEGpB,MAAK,SAAAqB,GACJR,EAAWQ,QAEZ,IAEH,IAyCIC,EAAmBjD,EAAQkD,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,OAASY,KA+EtD,OACE,6BACE,yCAE0B,OAAxB2B,EAA+B,kBAAC,EAAD,CAAcT,QAAUS,IAA2B,KAErF,kBAAC,EAAD,CAAQhD,aA9HY,SAACwD,GACpBT,EAAaS,EAAMC,OAAO/B,UA+H1B,yCACF,kBAAC,EAAD,CACEN,SAtFa,SAACoC,GAEd,GADAA,EAAME,iBACFL,EAAmB,CAClB,IAAMM,EAAG,UAAQN,EAAiB5C,KAAzB,2EAEkB,IAAxBmD,OAAOC,QAAQF,IACfR,EACYE,EAAiBpC,GAAI,CAACR,KAAMY,EAASL,OAAQO,IACpDQ,MAAK,SAAA+B,GAEJb,EAAuB,CACrB,KAAO,IAAP,OAAaI,EAAiB5C,KAA9B,4BACA,KAAQ,iBAGZsD,YAAW,WACPd,EAAuB,QACxB,KACCL,EAAWxC,EAAQU,KAAI,SAAAN,GAAM,OAAIA,EAAOS,KAAO6C,EAAc7C,GAAKT,EAASsD,MAC3EjB,EAAW,IACXC,EAAa,OAEhBkB,OAAM,SAAAC,GACLhB,EAAuB,CACrB,KAAO,oBAAP,OAA6BI,EAAiB5C,KAA9C,yCACA,KAAQ,UAGZsD,YAAW,WACPd,EAAuB,QACxB,aAMP5B,EAAQR,OAAS,GAAKU,EAAUV,OAAS,EAE/CsC,EACQ,CAAC1C,KAAMY,EAASL,OAAQO,IAC/BQ,MAAK,SAAAmC,GAEJjB,EAAuB,CACrBR,KAAK,GAAD,OAAMyB,EAAezD,KAArB,6BACJkB,KAAM,iBAGVoC,YAAW,WACPd,EAAuB,QACxB,KAEDL,EAAWxC,EAAQ+D,OAAOD,IAC1BrB,EAAW,IACXC,EAAa,OAQbsB,MAAM,kDA0BV/C,QAASA,EACTC,iBArBqB,SAACkC,GACxBX,EAAWW,EAAMC,OAAO/B,QAqBtBH,UAAWA,EACXC,mBAnBuB,SAACgC,GAC1BV,EAAaU,EAAMC,OAAO/B,UAqBxB,uCACA,kBAAC,EAAD,CAASvB,UAAWA,EAAWC,QAASA,EAASC,cAtI7B,SAACgE,GACrB,IAAMpD,EAAKoD,EAAEZ,OAAOxC,GACdR,EAAO4D,EAAEZ,OAAOhD,KAChBkD,EAAG,uCAAoClD,EAApC,MAEmB,IAAxBmD,OAAOC,QAAQF,IACfR,EACkBlC,GACbc,MAAK,SAAAuC,GACJrB,EAAuB,CACrB,KAAO,GAAP,OAAYxC,EAAZ,4BACA,KAAQ,UAEZsD,YAAW,WACPd,EAAuB,QACxB,KAECL,EAAWxC,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOS,KAAOA,SAErD+C,OAAM,SAAAC,GACHhB,EAAuB,CACvB,KAAO,GAAP,OAAYxC,EAAZ,oCACA,KAAQ,UAEZsD,YAAW,WACPd,EAAuB,QACxB,KAECL,EAAWxC,EAAQG,QAAO,SAAAC,GAAM,OAAIA,EAAOS,KAAOA,c,MCjDpEsD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.69dd8940.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({handleFilter}) => (\r\n    <div>search name in the phonebook: <input onChange={handleFilter}/></div>\r\n) \r\n\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst Persons = ({newFilter, persons, deleteContact}) => {\r\n  \r\n    const personsFiltered = persons.filter(person => {\r\n        return person.name.toLowerCase().includes(newFilter.toLowerCase())\r\n    })\r\n    \r\n    const personsToShow = newFilter.length === 0 ? persons : personsFiltered\r\n\r\n    const displayPersons = personsToShow.map(person =>\r\n        <div key={person.name}>\r\n             {person.name} {person.number} \r\n\r\n            <button name={ person.name } \r\n                    id={ person.id }\r\n                    onClick={ deleteContact }> delete</button>\r\n             \r\n             </div>\r\n    )    \r\n    \r\n    return (\r\n        <div>{displayPersons}</div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ addEntry, newName, handleNameChange, newNumber, handleNumberChange}) => (\r\n\r\n  <form onSubmit={addEntry}>\r\n        <div>\r\n          name: <input  value={newName}\r\n          onChange={handleNameChange}/>\r\n        </div> \r\n        \r\n        <div>\r\n          number: <input  value={newNumber}\r\n          onChange={handleNumberChange}/>\r\n        </div>\r\n        \r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n\r\n\r\nexport default PersonForm;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => axios.delete(`${baseUrl}/${id}`);\r\n\r\n\r\nexport default {getAll ,create ,update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={ message.type === \"error\" ? \"error\" : \"notification\" }>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage] = useState(null)\r\n  \r\nuseEffect(() => {\r\n    personService\r\n    .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n    }, [])\r\n\r\n    const handleFilter = (event) => {\r\n      setNewFilter(event.target.value)\r\n  }    \r\n\r\n    const deleteContact = (e) => {\r\n      const id = e.target.id\r\n      const name = e.target.name\r\n      const msg = `Do you really want to delete ${ name }?`\r\n    \r\n      if (window.confirm(msg) === true) {\r\n          personService\r\n              .deletePerson(id)\r\n              .then(deletedPerson => {\r\n                setNotificationMessage({\r\n                  \"text\": `${ name } was removed from server`,\r\n                  \"type\": \"error\"\r\n              })\r\n              setTimeout(() => {\r\n                  setNotificationMessage(null)\r\n              }, 5000)\r\n\r\n                  setPersons(persons.filter(person => person.id !== id))\r\n              })\r\n              .catch(error => {\r\n                  setNotificationMessage({\r\n                  \"text\": `${ name } was already removed from server`,\r\n                  \"type\": \"error\"\r\n              })\r\n              setTimeout(() => {\r\n                  setNotificationMessage(null)\r\n              }, 5000)\r\n\r\n                  setPersons(persons.filter(person => person.id !== id))\r\n              })\r\n      }\r\n    }\r\n\r\n    const findPerson = ()=>{\r\n      const name = newName\r\n      return persons.some(person => person.name.toLowerCase() === name.toLowerCase())\r\n  }\r\n  const duplicateContact = persons.find(p => p.name === newName);\r\n  \r\n  \r\n  const addEntry = (event) => {\r\n      event.preventDefault()\r\n      if( duplicateContact ) {\r\n           const msg =  `${ duplicateContact.name } is already added to phonebook, replace the old number with a new one?`\r\n  \r\n          if (window.confirm(msg) === true) {\r\n              personService\r\n                  .update(duplicateContact.id, {name: newName, number: newNumber})\r\n                  .then(updatedPerson => {\r\n  \r\n                    setNotificationMessage({\r\n                      \"text\": ` ${ duplicateContact.name }'s number is now updated`,\r\n                      \"type\": \"notification\"\r\n                  })\r\n    \r\n                  setTimeout(() => {\r\n                      setNotificationMessage(null)\r\n                  }, 5000)\r\n                      setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\r\n                      setNewName('')\r\n                      setNewNumber('')\r\n                  })\r\n                  .catch(error => {\r\n                    setNotificationMessage({\r\n                      \"text\": ` Information of  ${ duplicateContact.name } has already been removed from server`,\r\n                      \"type\": \"error\"\r\n                  })\r\n    \r\n                  setTimeout(() => {\r\n                      setNotificationMessage(null)\r\n                  }, 5000)\r\n                        \r\n                  })\r\n          }\r\n      }\r\n  \r\n      else if(newName.length > 0 && newNumber.length > 0 ){\r\n  \r\n        personService\r\n        .create({name: newName, number: newNumber})\r\n        .then(returnedPerson => {\r\n          \r\n          setNotificationMessage({\r\n            text: `${ returnedPerson.name } is now in your phonebook`,\r\n            type: \"notification\"\r\n        })\r\n  \r\n        setTimeout(() => {\r\n            setNotificationMessage(null)\r\n        }, 5000)\r\n  \r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          \r\n           \r\n  \r\n        }) \r\n  \r\n      }\r\n      else{\r\n          alert(\"please complete the name and the number field\")\r\n      }\r\n  \r\n     \r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  \r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n    \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      { notificationMessage !== null ? <Notification message={ notificationMessage } /> : null }\r\n\r\n     <Filter handleFilter={handleFilter} />\r\n\r\n      <h2>add a new</h2>\r\n    <PersonForm\r\n      addEntry={addEntry}\r\n      newName={newName}\r\n      handleNameChange={handleNameChange}\r\n      newNumber={newNumber} \r\n      handleNumberChange={handleNumberChange}\r\n    />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons newFilter={newFilter} persons={persons} deleteContact={deleteContact}/>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}